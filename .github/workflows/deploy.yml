name: Deploy

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  aws_account_id: ${{ vars.AWS_ACCOUNT_ID }}
  aws_region: ${{ vars.AWS_REGION }}
  aws_role: ${{ vars.AWS_ROLE }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: extractions/setup-just@v2
      - uses: aws-actions/configure-aws-credentials@v4
        with:
            aws-region: ${{ env.aws_region }}
            role-to-assume: arn:aws:iam::${{ env.aws_account_id }}:role/${{ env.aws_role }}
            role-session-name: GitHubActions

      - name: deploy
        shell: bash
        run: just deploy

      - name: tf-set-envs
        shell: bash
        run: |
          cd tf
          DISTRIBUTION_ID=$(terraform output -raw cloudfront_dist_id)
          echo "DISTRIBUTION_ID=$DISTRIBUTION_ID"
          echo "DISTRIBUTION_ID=$DISTRIBUTION_ID" >> $GITHUB_ENV
  
          STATIC_BUCKET_NAME=$(terraform output -raw static_bucket_name)
          echo "STATIC_BUCKET_NAME=$STATIC_BUCKET_NAME"
          echo "STATIC_BUCKET_NAME=$STATIC_BUCKET_NAME" >> $GITHUB_ENV

      - name: s3-sync
        shell: bash
        run: aws s3 sync ${GITHUB_WORKSPACE}/static s3://$STATIC_BUCKET_NAME/ --delete
  
      - name: web-refresh
        shell: bash
        run: |
          aws cloudfront get-distribution --id $DISTRIBUTION_ID --output json
          aws cloudfront create-invalidation --distribution-id $DISTRIBUTION_ID --paths "/*"

